{"version":3,"sources":["components/Table.component.jsx","components/Form.component.jsx","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","charactersData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEOA,EAAc,WACjB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,eAAeC,KAAI,SAACC,EAAKC,GACxC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MAYjB,OACI,gCAAQJ,KAiBDS,E,4JAZX,WAAU,IAAD,EACuCC,KAAKX,MAAzCE,EADH,EACGA,eAAgBO,EADnB,EACmBA,gBAExB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,eAAgBA,EAAgBO,gBAAiBA,W,GAPxDG,a,OCuBLC,E,4MAtDXC,aAAe,CACXR,KAAM,GACNC,IAAK,I,EAGTQ,MAAQ,EAAKD,a,EAGbE,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBZ,EADY,EACZA,KAAMa,EADM,EACNA,MAEd,EAAKC,SAAL,eACKd,EAAOa,K,EAMhBE,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WAAU,IAAD,EACiBH,KAAKI,MAAnBT,EADH,EACGA,KAAMC,EADT,EACSA,IAId,OACI,iCACI,uBAAOgB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eACnB,uBAAOO,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eACnB,uBACIQ,KAAK,SACLL,MAAM,SACNX,QAASG,KAAKU,oB,GAhDfT,aCwCJe,E,4MArCXZ,MAAQ,CACJa,WAAY,I,EAGhBnB,gBAAkB,SAACJ,GAAW,IAClBuB,EAAe,EAAKb,MAApBa,WAER,EAAKR,SAAS,CACVQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAOzBiB,aAAe,SAAAQ,GACX,EAAKV,SAAS,CACVQ,WAAW,GAAD,mBACH,EAAKb,MAAMa,YADR,CAENE,O,4CAKZ,WAAU,IACEF,EAAejB,KAAKI,MAApBa,WAER,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAO9B,eAAgB0B,EAAYnB,gBAAiBE,KAAKF,kBACzD,cAAC,EAAD,CAAMa,aAAcX,KAAKW,sB,GAhCvBV,a,MCClBqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.761506a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst  TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n};\n\nconst TableBody = (props) => {\n    const rows = props.charactersData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>\n                        Delete\n                    </button>\n                </td>\n            </tr>\n        )\n    })\n\n    return (\n        <tbody>{rows}</tbody>\n    )\n};\n\nclass Table extends Component {\n    render() {\n        const { charactersData, removeCharacter } = this.props;\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody charactersData={charactersData} removeCharacter={removeCharacter} />\n            </table>\n        )\n    }\n}\n\nexport default Table;","import React, { Component } from 'react';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: '',\n    }\n\n    state = this.initialState;\n\n    //save the state of the input into a local state\n    handleChange = event => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    //submit the input values using the handleSubmit method passed down to it from App component\n    //sending the local state to handleSubmit\n    submitForm = () => {\n        this.props.handleSubmit(this.state);\n        this.setState(this.initialState);\n    }\n\n    render() {\n        const { name, job } = this.state;\n\n        //We are using an onClick instead of an onSubmit since we're not using the standard\n        //submit functionality. The click will call the submitForm we made.\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange} />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange} />\n                <input \n                    type=\"button\"\n                    value=\"Submit\"\n                    onClick={this.submitForm} />\n            </form>\n\n        );\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Table from './components/Table.component';\nimport Form from './components/Form.component';\n\nclass App extends Component {\n    state = {\n        characters: [],\n    }\n    \n    removeCharacter = (index) => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index\n            }),\n        })\n    }\n\n    //receives the local state from other component and updates the app state with it\n    //spreads the App state first and then adds the state passed from other component so the App state doesn't mutate\n    handleSubmit = character => {\n        this.setState({\n            characters: [\n                ...this.state.characters, \n                character\n            ]\n        })\n    }\n\n    render() {\n        const { characters } = this.state;\n\n        return (\n            <div className=\"container\">\n                <Table charactersData={characters} removeCharacter={this.removeCharacter} />\n                <Form handleSubmit={this.handleSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}